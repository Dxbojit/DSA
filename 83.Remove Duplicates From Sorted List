class Solution {
    public ListNode deleteDuplicates(ListNode head) {
    if (head == null || head.next == null) {
        return head; // If the list is empty or has only one node, return as is
    }
    
    ListNode dummyNode = new ListNode(0); // Dummy node to handle edge cases
    dummyNode.next = head; 
    ListNode prev = dummyNode;
    ListNode curr = head;
    
    while (curr != null && curr.next != null) {
        if (curr.val != curr.next.val) {
            prev.next = curr; 
            prev = prev.next; 
        }
        curr = curr.next; 
    }
    
    prev.next = curr;
    
    return dummyNode.next;
    }
}
